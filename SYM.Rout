
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

R ist ein Gemeinschaftsprojekt mit vielen Beitragenden.
Tippen Sie 'contributors()' für mehr Information und 'citation()',
um zu erfahren, wie R oder R packages in Publikationen zitiert werden können.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

[Vorher gesicherter Workspace wiederhergestellt]

> setwd("/Users/victorsteffens/CoMOLA_repo/COMOla/models_9/SYM")
> sink("/Users/victorsteffens/CoMOLA_repo/COMOla/models_9/SYM/console.txt", append=FALSE)
> library(here)
here() starts at /Users/victorsteffens/CoMOLA_repo/COMOla
> ##########################################################################################
> #
> #     ~ ~ ~ Simple Yield Model (SYM) ~ ~ ~
> #     ~ ~ ~ this is just a toy model ~ ~ ~
> #     ~ ~ ~ Input data ~ ~ ~
> #    land_use.asc        |land use map containing the following classes
> #                        |1,2,3,4,5 = arable land with increasing intensity from 1 to 5
> #                        |6 = forest
> #                        |7 = pasture
> #                        |8 = urban area
> #                        |-2 = no data
> #
> #    soil_fertility.asc  |map on soil fertility which can range from 0.1 to 1
> #
> #    Objective: Maximize crop yield
> #
> ##########################################################################################
> 
> # set working directory
> 
> # read in ascii files
> lu.map <- read.table(here('models', 'SYM' ,'map.asc'), h=F, skip=6, sep=" ")
> fert.map <- read.table("soil_fertility.asc", h=F, skip=6, sep=" ")
> 
> # array index for arable land
> arable.idx <- which(lu.map <= 5 & lu.map > 0, arr.ind=T)
> 
> # calculate crop yield as logarithmic function of intensity and soil fertility
> yield <- log(lu.map[arable.idx] * (1 + fert.map[arable.idx]))
> yield[is.na(yield)] <- 0
> yield.sum <- sum(yield)
> 
> # write model output
> write.table(yield.sum ,here('models', 'SYM','SYM_output.csv'),append=FALSE ,sep =";",col.names=FALSE ,row.names=FALSE)
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> sink()
> 
> proc.time()
       User      System verstrichen 
      0.249       0.049       0.320 
